// ... previous code ...


// Responsive grid classes for sm breakpoint
@media (min-width: map-get($grid-breakpoints, sm)) {
  // Column classes
  @for $i from 1 through $grid-columns {
    .col-sm-#{$i} {
      flex: 0 0 auto;
      width: percentage($i / $grid-columns);
    }
  }

  // Offset classes
  @for $i from 0 through $grid-columns - 1 {
    .offset-sm-#{$i} {
      margin-left: if($i == 0, 0, percentage($i / $grid-columns));
    }
  }

  // Gutter system
  $gutter-spacers: (
    0: 0,
    1: 0.25rem,
    2: 0.5rem,
    3: 1rem,
    4: 1.5rem,
    5: 3rem,
    6: 4.5rem,
    7: 6rem,
    8: 7.5rem
  );

  @each $key, $value in $gutter-spacers {
    .g-sm-#{$key},
    .gx-sm-#{$key} {
      --bs-gutter-x: #{$value};
    }

    .g-sm-#{$key},
    .gy-sm-#{$key} {
      --bs-gutter-y: #{$value};
    }
  }
}

// Mixin for generating grid classes
@mixin make-grid-classes($breakpoint) {
  $infix: if($breakpoint == '', '', '-#{$breakpoint}');

  .col#{$infix} {
    flex: 1 0 0%;
  }

  // Row columns
  @for $i from 1 through 6 {
    .row-cols#{$infix}-#{$i} > * {
      flex: 0 0 auto;
      width: percentage(1 / $i);
    }
  }

  // Basic columns
  .col#{$infix}-auto {
    flex: 0 0 auto;
    width: auto;
  }

  @for $i from 1 through $grid-columns {
    .col#{$infix}-#{$i} {
      flex: 0 0 auto;
      width: percentage($i / $grid-columns);
    }
  }

  // Offset columns
  @for $i from 0 through $grid-columns - 1 {
    .offset#{$infix}-#{$i} {
      margin-left: if($i == 0, 0, percentage($i / $grid-columns));
    }
  }

  // Gutters
  @each $key, $value in $gutter-spacers {
    .g#{$infix}-#{$key},
    .gx#{$infix}-#{$key} {
      --bs-gutter-x: #{$value};
    }

    .g#{$infix}-#{$key},
    .gy#{$infix}-#{$key} {
      --bs-gutter-y: #{$value};
    }
  }
}

// Apply grid classes for medium breakpoint
@media (min-width: map-get($grid-breakpoints, md)) {
  @include make-grid-classes('md');
}